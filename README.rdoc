= Naf, a Job Scheduling Rails Engine

== Getting Started

=== Creating Postgres-backed Rails App

1. Create a new rails application (call it whatever you want, for my example it's: myapp), and enter

    rails new myapp
    
    cd myapp

2. Create a new Postgres development database

    createdb -O postgres myapp_development

3. Delete the sqlite gem dependency from your Gemfile, and add the Postgres adapter gem, the Fiksu Af gem, and Fiksu Naf gem

    gem 'pg'
    gem 'af',  :git => 'git@github.com:fiksu/af.git'
    gem 'naf', :git => 'git@github.com:fiksu/naf.git'

3. Edit your config/database.yml file

    development:
        adapter: postgresql
        encoding: UTF8
        username: postgres
        host: localhost
        database: myapp_development

=== Importing Naf

1. Now import these new gems
    
    bundle install

2. Run the two generators to bring in the necessary configurations, initializers, and migrations into your Rails app.
   You can provide an argument here which specifies the Postgres schema which the Naf tables will reside in, default is: 'myapp_job_system'

    rails generate naf_system {myapp_job_system}
    rails generate naf_system_schema

3. This has created/edited the following files:

    config/job_system_schema_config.yml (Specifies the schema_name)
    config/initializers/job_system_initializer.rb  (Loads the schema_name)
    config/routes.rb  (Edited to mount Naf as a rails engine, at the default path "/job_system")
    app/assets/javascripts/application.js (Edited to require naf javascript assets)
    app/assets/stylesheets/application.css (Edited to require naf stylesheet assets)

    db/migrate/[migration_number]create_job_system.rb (The migration to create the job system tables)

4. All you have to do is to run this new migration, and you have your database all set up.

    rake db:migrate

5. Try running the Rails console, and see that you have the Naf models loaded, and mapped to the database.

    rails console
    Naf::Affinity.all

6. If you use a base controller for your application's authentication, edit the line from config/initializers/job_system_schema_initializer.rb

    CONTROLLER_NAME_STR = "::ApplicationController"

7. Now the Naf Job System engine should be mounted at the default path '/job_system' (Configurable in config/routes.rb)

8. Undo all of this setup by running the following rake task:

    rake naf:teardown

== Using Naf
  
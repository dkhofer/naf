= Naf, a Job Scheduling Rails Engine

== Getting Started

=== Creating Postgres-backed Rails App

1. Create a new rails application (call it whatever you want, for my example it's: myapp), and enter

    rails new myapp
    
    cd myapp

2. Create a new Postgres development database

    createdb -O postgres myapp_development

3. Delete the sqlite gem dependency from your Gemfile, and add the Postgres adapter gem, the Fiksu Af gem, and Fiksu Naf gem

    gem 'pg'
    gem 'af',  :git => 'git@github.com:fiksu/af.git'
    gem 'naf', :git => 'git@github.com:fiksu/naf.git'

3. Edit your config/database.yml file

    development:
        adapter: postgresql
        encoding: UTF8
        username: postgres
        host: localhost
        database: myapp_development

=== Importing Naf

1. Now import these new gems
    
    bundle install

2. The generator to copy a configuration YAML file, and an initializer into your main applications code base.
   You can optionally provide an argument which specifies the Postgres schema which the Naf tables will reside in, default is: 'myapp_job_system'

    rails generate naf_system [myapp_job_system]

3. This has created/edited the following files:

    config/job_system_schema_config.yml (Specifies the schema_name)
    config/initializers/job_system_initializer.rb  (Loads the schema_name)
    config/routes.rb  (Edited to mount Naf as a rails engine, at the default path "/job_system")

4. Now bring in all of the Naf schema migrations.  When you bundle the latest version of Naf for production, make sure to add this command to your deploy script. So that you can change to the Engine's latest schema.

   rake naf:install:migrations

5. This has copied all the Naf migrations to your db/migrate folder, run the schema changes.

    rake db:migrate

6. Try running the Rails console, and see that you have the Naf models loaded, and mapped to the database.

    rails console
    Naf::Affinity.all

7. If you use a base controller for your application's authentication, edit the line from config/initializers/job_system_initializer.rb

    CONTROLLER_NAME_STR = "::ApplicationController"

8. Now you can visit the Naf Job System UI mounted at the default path '/job_system' (Configurable in config/routes.rb)

9. You can change the name shown on the page, edit the 'main_app_title' attribute in config/job_system_config.yml.

10. Undo all of this setup by running the following rake task, rolling back all the naf migrations, and deleting all copied/installed files.

    rake naf:teardown

== Using Naf
  